global !p
fn_base = fn.split(os.extsep)[0];
lc_base = fn.split(os.extsep)[0].lower()
endglobal

snippet module "Evo module package"
package ${1:My}::`!p snip.rv = fn_base` ;
use Evo '-Export *';

${0}

1;
endsnippet

snippet expo "Evo exported function"
sub `!p snip.rv = lc_base`_${1:func}(${2:$arg}) : Export {
	${0}
}
endsnippet

snippet comp "Evo component"
package ${1:My}::`!p snip.rv = fn_base`;
use Evo '-Comp *';

${0}

1;
endsnippet

snippet compw "Evo component with a role"
package ${1:My}::`!p snip.rv = fn_base`;
use Evo '-Comp *';

with ':${2:MyRole}';

${0}

1;
endsnippet

snippet rolep "Evo role package"
package ${1:My}::`!p snip.rv = fn_base` ;
use Evo '-Role *';

$0

1;
endsnippet

snippet meth "Evo role method"
sub `!p snip.rv = lc_base`_${1:meth}(${2:$self}) : Role {
	${0}
}
endsnippet

snippet test "Test template"
use Evo 'Test::More; ${1}';

${0}

done_testing;
endsnippet

snippet for "foreach loop"
foreach my $${3:cur} (@${1:list}) {
	${0}
}
endsnippet

snippet use "foreach loop"
use Evo '${0} *';
endsnippet
